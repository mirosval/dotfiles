# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',alacritty:Tc'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Fix copy-paste
# Don't copy on mouse release
unbind -T copy-mode-vi             MouseDragEnd1Pane
# Selection keybind
bind   -T copy-mode-vi v   send -X begin-selection
# Toggle selection mode
bind   -T copy-mode-vi C-v send -X rectangle-toggle
# Copy to clipboard
bind   -T copy-mode-vi y   send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send -X clear-selection 

bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send -X clear-selection

# Copy to clipboard
bind -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send -X clear-selection 

bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Clear history
bind C send-keys -R \; send-keys C-l \; clear-history \; send-keys

# session switching
bind s display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# start windows numbering at 1
set -g base-index 1
# make pane numbering consistent with windows
set -g pane-base-index 1
# renumber windows when a window is closed
set -g renumber-windows on

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmux-themepack'

# Resurrect vim too
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Net Speed
set -g @net_speed_interfaces "en0"

# Set the theme
set -g @themepack 'powerline/block/cyan'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# Hackity-Hack: I removed -b from the next line in order to be able to override the status line content
# https://github.com/jimeh/tmux-themepack/issues/21
run '~/.tmux/plugins/tpm/tpm'

# {{{ Vim pane switching
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
# }}}

# Status
BG1="colour255"
BG2="colour250"
BG3="colour245"
BG4="colour240"
BG5="colour245"

home="#[fg=colour232,bg=$BG1,bold] #S"
user="#[fg=$BG1,bg=$BG2,nobold]#[fg=0,bg=$BG2] #(whoami)"
panels="#[fg=$BG2,bg=$BG3]#[fg=0,bg=$BG3] #I:#P"
datetime="#[fg=$BG3,bg=$BG4]#[fg=0,bg=$BG4] %b %d %H:%M:%S"
end="#[fg=$BG4,bg=colour233,nobold]"

set -g status-left-length 100
set -g status-left "$home $user $panels $datetime $end"

net_speed="#[fg=$BG3,bg=colour233]#[fg=0,bg=$BG3] #(diffmetrik --metric download) #(diffmetrik --metric upload)"
battery="#[fg=$BG2,bg=$BG3]#[fg=0,bg=$BG2] bat: #(~/.dotfiles/scripts/battery.sh)%% "
spotify="#[fg=$BG1,bg=$BG2,bold]#[fg=colour0,bg=$BG1]#(~/.dotfiles/scripts/spotify.sh)"

set -g status-right "$net_speed $battery $spotify"

set -g status-justify centre
